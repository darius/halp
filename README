Haskell Active Literate Programming -- release 0.1

Runs specially marked lines from a literate Haskell file in the
context of the definitions in the file, and puts their output/result
underneath.

Any lines beginning with ") " are treated as input lines to ghci, with
the result, value, or interpreter error printed below on lines
beginning with "| ". Any existing output lines are overwritten. Python
doctest style functionality should be easy to build by using diff
instead.

To try it out, first install halp.el as described below. Then visit a
suitable file, such as sample.lhs in this directory, and hit M-i. The
buffer must compile cleanly as literate Haskell (or plain Haskell if
it's a .hs file).

To install it, put ghcihalp.py wherever you like, edit the definition
of halp-helpers-directory in halp.el to refer to it, and set up your
.emacs to load halp.el. You will need Emacs haskell-mode installed
already, and Python >= 2.3 (I think).

There are also similar experiments in Python and 'literate shell
scripts': try visiting sample.py or sample.sh. (These need pyhalp.py
or sh-halp.sh to be in whatever directory you installed ghci-halp.sh.)


Authors:

Darius Bacon <darius@wry.me>
Brandon Moore
Evan Murphy

HALP

With Halp, one keystroke executes all specially-marked lines from a
buffer and inserts the results inline. It can do this for source code
in Python, Haskell (literate or illiterate), or sh. This helps you
interactively test your programs as you write them -- like a
read-eval-print loop, but different.

To try it out, first install halp.el as described below. Then visit a
suitable file, (like sample.py, sample.lhs, or sample.sh in this
directory), and hit M-i. These sample files will explain what you can
do and how it works. (XXX actually they don't yet)


INSTALLING

Add this line to your .emacs:

  (load-file "/path/to/halp.el")

or just do M-x load-file halp.el.

It will bind M-i in the modes that Halp supports. (Edit halp.el if you
want to change this.)

You will need python-mode, or haskell-mode, etc., installed already
(whichever of these you intend to use with Halp). You will also need
Python >= 2.3 (I think). This was tested with Python 2.5 and Emacs 22.


AUTHORS

Darius Bacon <darius@wry.me>
Brandon Moore
Evan Murphy

don't output 'None' results

Occasionally python is claiming to see a syntax error on ## lines
that are at the end of the file with no trailing \n. Dunno why.

we're still getting 'File "<string>", line 14' on syntax errors

the first line in a traceback from a ## line needs its line-number
fixed differently

move cursor to exact position reported by compiler error message

catch writes to stdout

tush variant

continuous halp mode: auto-rerun halp after every change to the buffer;
but don't show changed output after these auto-reruns (too disruptive);
instead just change the prefixes on outputs that change (to '#X ', say).

more concise/useful Python error messages

doctest support -- mark an output as 'correct', and tell me when
there's an error

single-stepping of some sort

test isolation

allow multiline examples (and outputs?)

syntax coloring

allow reading previous round's output, to give us state and make this
a means of actual interaction with a program

support "literate python"? noweb?

for Haskell, handle compiler error messages for example lines

rewrite in elisp?

insert results asynchronously; don't hang up emacs

lisp support

persistent process to avoid startup time, if possible

make sure python isn't compiling pyhalp.py every time we run



DONE:

don't move the cursor
(sort of done)

less fragility wrt underlying interpreter version, etc.
(done, I guess)

implement in python instead of a shell mishmash

handle compiler error messages vaguely intelligently

do something for plain old haskell mode (non-literate)

python support

fix bug: pyhalp was adding a newline at EOF every time

error messages that appear at the point of the error

use named functions for keybindings in halp.el (not lambdas)

bug: on syntax error, the tracebacks pile up if you keep hitting M-i

python-mode-map is py-mode-map in the python-mode that comes with Python

make install more automatic

allow statements

fix: line numbers in tracebacks can be wrong (since we insert/delete lines)

get source lines back into tracebacks
  - set __loader__ variable? see linecache.py:updatecache()
  - write to a file and import that?

get module name back into tracebacks

don't move the cursor, really. (done for python only)

don't dirty the buffer unnecessarily (done for python only)

emacs is misfontifying after M-i. WTF? oh. seems like it's starting
from the old fontification but with the new text in position, and
getting confused. no, it's worse than that: it gets fucked up even
when nothing changes.

also, why is it moving my window start position in the buffer
when there are no changes in the text before the start position,
and point doesn't stray out of the visible area?

display a "Halp starting..." message when we start; "finished" when done
